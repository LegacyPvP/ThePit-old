<?php

namespace Legacy\ThePit\Items\List;

use Legacy\ThePit\Core;
use pocketmine\block\Block;
use pocketmine\item\Item;
use pocketmine\item\ItemIdentifier;
use pocketmine\item\ItemUseResult;
use pocketmine\math\Vector3;
use pocketmine\player\Player;

final class Flap extends Item
{
    public function __construct(ItemIdentifier $identifier, string $name = "Flap")
    {
        parent::__construct($identifier, $name);
    }

    public function onClickAir(Player $player, Vector3 $directionVector): ItemUseResult
    {
        $motion = $player->getMotion();
        $motion->x += $directionVector->x * (float)Core::getInstance()->getConfig()->getNested("items.flap.horizontal", 1.0);
        $motion->y += $directionVector->y * (float)Core::getInstance()->getConfig()->getNested("items.flap.vertical", 1.0);; // TODO: ($directionVector->y > 0.85 ? 1 : 0.15) * (float)Core::getInstance()->getConfig()->getNested("items.flap.vertical", 1.0)
        $motion->z += $directionVector->z * (float)Core::getInstance()->getConfig()->getNested("items.flap.horizontal", 1.0);
        $player->setMotion($motion);
        return parent::onClickAir($player, $directionVector);
    }

    public function onInteractBlock(Player $player, Block $blockReplace, Block $blockClicked, int $face, Vector3 $clickVector): ItemUseResult
    {
        return parent::onInteractBlock($player, $blockReplace, $blockClicked, $face, $clickVector); // TODO: Change the autogenerated stub
    }

    public function getMaxStackSize(): int
    {
        return 1;
    }
}